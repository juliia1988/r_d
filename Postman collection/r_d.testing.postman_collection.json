{
	"info": {
		"_postman_id": "7573b4f4-9a07-4641-83c7-c766891589c9",
		"name": "r_d.testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13151019",
		"_collection_link": "https://www.postman.com/martian-comet-157804/workspace/r-d-testing/collection/13151019-7573b4f4-9a07-4641-83c7-c766891589c9?action=share&source=collection_link&creator=13151019"
	},
	"item": [
		{
			"name": "Goals API",
			"item": [
				{
					"name": "Get all goals by team id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is within an acceptable range\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"",
									"pm.test(\"Validate the response schema for the presence of required fields and data types\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.goals).to.be.an('array');",
									"    pm.expect(responseData.goals).to.exist;",
									"    pm.expect(responseData.goals).to.have.lengthOf.at.least(1);",
									"    ",
									"    responseData.goals.forEach(function(goal) {",
									"        pm.expect(goal).to.have.property('id').that.is.a('string');",
									"        pm.expect(goal).to.have.property('name').that.is.a('string');",
									"        pm.expect(goal).to.have.property('due_date').that.is.a('string')",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							}
						],
						"url": {
							"raw": "{{url}}/team/{{team_id}}/goal?include_completed=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"team",
								"{{team_id}}",
								"goal"
							],
							"query": [
								{
									"key": "include_completed",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create goal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Stores the goalId in an environment or global variable",
									"var goalId = pm.response.json().goal.id;",
									"console.log(goalId);",
									"pm.globals.set(\"goal_id\", goalId);",
									"",
									"// Verify the length of the response data",
									"pm.test(\"Response data length must be greater than zero\", function () {",
									"    const responseData = pm.response.json();",
									"    const goal = responseData.goal;",
									"",
									"    pm.expect(Object.keys(goal).length).to.be.greaterThan(0, \"Response data should not be empty\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Goal Name\",\n    \"due_date\": 1568036964079,\n    \"description\": \"Goal Description\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/team/{{team_id}}/goal",
							"host": [
								"{{url}}"
							],
							"path": [
								"team",
								"{{team_id}}",
								"goal"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get goal by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json().goal;",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.any.keys(",
									"        'id', 'pretty_id', 'name', 'team_id'",
									"    );",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							}
						],
						"url": {
							"raw": "{{url}}/goal/{{goal_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"goal",
								"{{goal_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update goal by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData.goal.id).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.goal.name).to.exist.and.to.be.a('string')",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Goal Name {{$randomUserName}}\",\n    \"due_date\": 1568036964079,\n    \"description\": \"Updated Goal Description\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/goal/{{goal_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"goal",
								"{{goal_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Key Result",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Stores the goalId in an environment or global variable",
									"var keyResultId = pm.response.json().key_result.id;",
									"console.log(keyResultId);",
									"pm.globals.set(\"key_result_id\", keyResultId);",
									"",
									"// Add a test to check the length of the response data",
									"pm.test(\"Response data has the expected length\", function () {",
									"    var responseData = pm.response.json();",
									"    pm.expect(Object.keys(responseData).length).to.be.greaterThan(0, \"Response data should not be empty\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Key Result Name\",\n    \"owners\": [],\n    \"type\": \"number\",\n    \"steps_start\": 0,\n    \"steps_end\": 10,\n    \"unit\": \"km\",\n    \"task_ids\": [],\n    \"list_ids\": []\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/goal/{{goal_id}}/key_result",
							"host": [
								"{{url}}"
							],
							"path": [
								"goal",
								"{{goal_id}}",
								"key_result"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Key Result",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"",
									"pm.test(\"Last action object and its fields structure are valid\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.key_result.last_action).to.be.an('object');",
									"    pm.expect(responseData.key_result.last_action.id).to.be.a('string');",
									"    pm.expect(responseData.key_result.last_action.key_result_id).to.be.a('string');",
									"    pm.expect(responseData.key_result.last_action.userid).to.be.a('number');",
									"    pm.expect(responseData.key_result.last_action.note).to.be.a('string');",
									"    pm.expect(responseData.key_result.last_action.date_modified).to.be.a('string');",
									"    pm.expect(responseData.key_result.last_action.steps_before).to.be.null;",
									"    pm.expect(responseData.key_result.last_action.steps_taken).to.be.null;",
									"    pm.expect(responseData.key_result.last_action.steps_current).to.be.null;",
									"    pm.expect(responseData.key_result.last_action.steps_before_float).to.be.a('number');",
									"    pm.expect(responseData.key_result.last_action.steps_taken_float).to.be.a('number');",
									"    pm.expect(responseData.key_result.last_action.workspace_id).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"steps_current\": 5,\n    \"note\": \"Target achieved\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/key_result/{{key_result_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"key_result",
								"{{key_result_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Key Result",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"pm.test(\"Response has the required Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response body is in a valid JSON format\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"",
									"pm.test(\"Response body matches the expected schema for a successful deletion\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.eql({});",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							}
						],
						"url": {
							"raw": "{{url}}/key_result/{{key_result_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"key_result",
								"{{key_result_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete goal ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.equal(404);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - err and ECODE\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.err).to.exist;",
									"    pm.expect(responseData.ECODE).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(3000);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/goal/{{goal_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"goal",
								"{{goal_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "pk_74475495_QSKWFARW1MSARRIFHCWDK6GU54GQJX9U"
		},
		{
			"key": "folder_id",
			"value": "90153599413"
		},
		{
			"key": "team_id",
			"value": "9015705098"
		},
		{
			"key": "url",
			"value": "https://api.clickup.com/api/v2"
		}
	]
}